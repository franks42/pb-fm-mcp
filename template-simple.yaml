AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: pb-fm-mcp - Single Lambda MCP + REST Server with Custom Domain Support

Parameters:
  Environment:
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - prod
    Description: Environment name (dev or prod)
  
  DomainName:
    Type: String
    Default: creativeapptitude.com
    Description: Base domain name for custom domain
  
  HostedZoneId:
    Type: String
    Description: Route 53 Hosted Zone ID for creativeapptitude.com
    Default: ""
    
  CertificateArn:
    Type: String
    Description: ARN of the SSL certificate from Certificate Manager (optional)
    Default: ""

Conditions:
  IsProduction: !Equals [!Ref Environment, prod]
  HasCustomDomain: !Not [!Equals [!Ref CertificateArn, ""]]

Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.12
  Api:
    OpenApiVersion: 3.0.1

Resources:
  MyServerlessApi:
    Type: AWS::Serverless::Api
    Properties:
      StageName: v1
      Cors:
        AllowMethods: "'POST,GET,OPTIONS'"
        AllowHeaders: "'Content-Type,Authorization,Accept'"
        AllowOrigin: "'*'"
        MaxAge: "'3600'"

  PbFmMcpFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: .
      Handler: run.sh
      Description: "Unified MCP + REST Server with AWS Lambda Web Adapter"
      Layers:
        - arn:aws:lambda:us-west-1:753240598075:layer:LambdaAdapterLayerX86:25
      Environment:
        Variables:
          AWS_LAMBDA_EXEC_WRAPPER: /opt/bootstrap
          PORT: 8000
          API_GATEWAY_STAGE_PATH: /v1
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - sqs:CreateQueue
                - sqs:DeleteQueue
                - sqs:GetQueueAttributes
                - sqs:GetQueueUrl
                - sqs:ListQueues
                - sqs:SendMessage
                - sqs:ReceiveMessage
                - sqs:DeleteMessage
                - sqs:ChangeMessageVisibility
              Resource: !Sub 'arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:*'
        - DynamoDBCrudPolicy:
            TableName: !Ref DashboardTable
      Events:
        McpApi:
          Type: Api
          Properties:
            RestApiId: !Ref MyServerlessApi
            Path: /mcp
            Method: ANY
        RestApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref MyServerlessApi
            Path: /
            Method: ANY
        RestApiDocs:
          Type: Api
          Properties:
            RestApiId: !Ref MyServerlessApi
            Path: /docs
            Method: ANY
        RestApiOpenApi:
          Type: Api
          Properties:
            RestApiId: !Ref MyServerlessApi
            Path: /openapi.json
            Method: ANY
        RestApiRoutes:
          Type: Api
          Properties:
            RestApiId: !Ref MyServerlessApi
            Path: /api/{proxy+}
            Method: ANY
        AiTerminalRoute:
          Type: Api
          Properties:
            RestApiId: !Ref MyServerlessApi
            Path: /ai-terminal
            Method: GET
    Metadata:
      BuildMethod: python3.12

  DashboardTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      TimeToLiveSpecification:
        AttributeName: expires_at
        Enabled: true
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES

  # Custom domain for API Gateway (only if certificate provided)
  ApiCustomDomain:
    Type: AWS::ApiGateway::DomainName
    Condition: HasCustomDomain
    Properties:
      DomainName: !If 
        - IsProduction
        - !Sub "pb-fm-mcp.${DomainName}"
        - !Sub "pb-fm-mcp-dev.${DomainName}"
      CertificateArn: !Ref CertificateArn
      SecurityPolicy: TLS_1_2

  ApiBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Condition: HasCustomDomain
    Properties:
      DomainName: !Ref ApiCustomDomain
      RestApiId: !Ref MyServerlessApi
      Stage: v1

  ApiDnsRecord:
    Type: AWS::Route53::RecordSet
    Condition: HasCustomDomain
    Properties:
      HostedZoneId: !Ref HostedZoneId
      Name: !If 
        - IsProduction
        - !Sub "pb-fm-mcp.${DomainName}"
        - !Sub "pb-fm-mcp-dev.${DomainName}"
      Type: A
      AliasTarget:
        DNSName: !GetAtt ApiCustomDomain.DistributionDomainName
        HostedZoneId: !GetAtt ApiCustomDomain.DistributionHostedZoneId

Outputs:
  ApiUrl:
    Description: "API Gateway endpoint URL"
    Value: !Sub "https://${MyServerlessApi}.execute-api.${AWS::Region}.amazonaws.com/v1/"
    Export:
      Name: !Sub "${AWS::StackName}-api-url"

  OpenApiUrl:
    Description: "OpenAPI specification URL"
    Value: !Sub "https://${MyServerlessApi}.execute-api.${AWS::Region}.amazonaws.com/v1/openapi.json"
    Export:
      Name: !Sub "${AWS::StackName}-openapi-url"

  SwaggerDocsUrl:
    Description: "Swagger UI documentation URL"
    Value: !Sub "https://generator3.swagger.io/index.html?url=https://${MyServerlessApi}.execute-api.${AWS::Region}.amazonaws.com/v1/openapi.json"
    Export:
      Name: !Sub "${AWS::StackName}-swagger-docs-url"

  CustomDomainUrl:
    Condition: HasCustomDomain
    Description: "Custom domain base URL"
    Value: !If 
      - IsProduction
      - !Sub "https://pb-fm-mcp.${DomainName}/"
      - !Sub "https://pb-fm-mcp-dev.${DomainName}/"
    Export:
      Name: !Sub "${AWS::StackName}-custom-domain-url"

  CustomDomainMcpUrl:
    Condition: HasCustomDomain
    Description: "Custom domain MCP endpoint"
    Value: !If 
      - IsProduction
      - !Sub "https://pb-fm-mcp.${DomainName}/mcp"
      - !Sub "https://pb-fm-mcp-dev.${DomainName}/mcp"
    Export:
      Name: !Sub "${AWS::StackName}-custom-domain-mcp-url"